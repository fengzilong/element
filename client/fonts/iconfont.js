;(function(window) {

  var svgSprite = '<svg>' +
    '' +
    '<symbol id="icon-drop" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M773.994779 326.310857 511.711416 64.039525 249.430098 326.309834c-144.855072 144.848992-144.854049 379.694695 0 524.542664s379.710632 144.848992 524.564681 0C918.848828 706.004529 918.848828 471.158826 773.994779 326.310857z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-design" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M640.046113 182.5 640 182.5 640 318C640 323.067 641.443 328.751 643.864 333.212L740.412 510.99 536 856.335 536 552.001C554.351 543.088 567 524.272 567 502.5 567 472.124 542.376 447.5 512 447.5 481.624 447.5 457 472.124 457 502.5 457 524.271 469.649 543.088 488 552.001L488 856.335 283.587 510.991 380.132 333.219C382.554 328.762 384 323.073 384 318.001L384 182.5 383.953887 182.5 383.953887 182.5C383.179592 169.943905 372.751058 160 360 160 347.248942 160 336.820408 169.943905 336.046113 182.5L336 182.5 336 313.904 236.815 496.538C231.71 505.937 231.936 517.964 237.389 527.175L483.2 942.46C489.677 953.402 500.443 959.936 511.999 959.936 523.555 959.936 534.323 953.404 540.799 942.461L786.61 527.177C792.064 517.964 792.29 505.938 787.186 496.539L688 313.904 688 182.5 687.953887 182.5C687.179592 169.943905 676.751058 160 664 160 651.248942 160 640.820408 169.943905 640.046113 182.5ZM735.996316 128C753.671463 128 768 113.676998 768 96 768 78.326888 753.670749 64 735.996316 64L288.003684 64C270.328537 64 256 78.323002 256 96 256 113.673112 270.329251 128 288.003684 128L735.996316 128Z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-component24" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M871.978667 490.666667c-41.344 0-80.384 20.138667-104.789333 54.4-0.426667 0.554667-0.981333 1.365333-1.664 2.304-0.810667-3.584-1.109333-9.045333-0.512-15.104L765.013333 362.666667c0-58.624-47.573333-106.282667-106.069333-106.624l0-0.426667-169.472 0c-4.821333-0.213333-9.984-0.682667-13.696-1.749333 0.042667 0 0.042667-0.042667 0.085333-0.042667 34.474667-23.978667 55.04-63.274667 55.04-105.173333 0-70.570667-57.429333-128-128-128s-128 57.429333-128 128c0 41.344 20.138667 80.341333 54.4 104.789333C329.856 253.866667 330.666667 254.421333 331.605333 255.104 328.021333 255.872 322.56 256.213333 316.501333 255.616L144.341333 255.616l0 0.597333C86.442667 257.28 39.68 304.554667 39.68 362.666667l0.384 0 0.170667 166.741333c-2.474667 18.176 1.109333 51.669333 30.08 61.994667 17.962667 6.4 34.602667-0.853333 49.706667-22.101333C136.064 546.773333 162.090667 533.333333 189.653333 533.333333c47.061333 0 85.333333 38.229333 85.333333 85.333333s-38.272 85.333333-85.333333 85.333333c-27.946667 0-54.186667-13.738667-70.528-37.290667-16.896-24.533333-34.944-24.533333-47.189333-19.968-32.981333 11.989333-32.085333 55.338667-31.914667 59.306667l0 166.784C39.978667 873.472 39.68 873.984 39.68 874.666667c0 58.837333 47.872 106.666667 106.666667 106.666667l533.333333 0c11.776 0 21.333333-9.557333 21.333333-21.333333s-9.557333-21.333333-21.333333-21.333333L146.346667 938.666667c-35.285333 0-64-28.714667-64-64l0.384 0 0-169.429333c-0.128-4.736 0.682667-9.984 1.749333-13.696 0 0.042667 0.042667 0.042667 0.042667 0.128C108.458667 726.101333 147.754667 746.666667 189.653333 746.666667c70.570667 0 128-57.429333 128-128s-57.429333-128-128-128c-41.344 0-80.341333 20.138667-104.789333 54.4-0.384 0.554667-0.981333 1.365333-1.664 2.304-0.810667-3.584-1.109333-9.045333-0.512-15.104L82.688 362.666667 82.346667 362.666667c0-35.285333 28.714667-64 64-64L146.346667 298.282667l167.296-0.170667C316.586667 298.496 319.957333 298.709333 323.541333 298.709333c18.56 0 43.477333-6.4 52.138667-30.72 6.442667-18.005333-0.853333-34.602667-22.144-49.706667C331.008 202.282667 317.568 176.213333 317.568 148.650667c0-47.061333 38.272-85.333333 85.333333-85.333333s85.333333 38.272 85.333333 85.333333c0 27.946667-13.738667 54.186667-37.290667 70.528-24.576 16.896-24.448 34.986667-19.968 47.189333 11.989333 32.938667 55.296 32.128 59.306667 31.914667l166.229333 0C657.109333 298.368 657.664 298.666667 658.346667 298.666667c35.285333 0 64 28.714667 64 64l0.170667 166.741333c-2.432 18.176 1.109333 51.669333 30.08 61.994667 17.92 6.4 34.602667-0.853333 49.706667-22.101333 16.042667-22.570667 42.112-36.010667 69.674667-36.010667 47.061333 0 85.333333 38.229333 85.333333 85.333333s-38.272 85.333333-85.333333 85.333333c-27.946667 0-54.186667-13.738667-70.528-37.290667-16.896-24.533333-34.901333-24.533333-47.146667-19.968-32.981333 11.989333-32.085333 55.338667-31.914667 59.306667L722.389333 853.333333c0 11.776 9.557333 21.333333 21.333333 21.333333s21.333333-9.557333 21.333333-21.333333l0-148.096c-0.170667-4.736 0.682667-9.984 1.706667-13.696 0.042667 0.042667 0.042667 0.042667 0.042667 0.128 23.978667 34.432 63.317333 54.997333 105.216 54.997333 70.570667 0 128-57.429333 128-128S942.549333 490.666667 871.978667 490.666667z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-visibleicon" viewBox="0 0 1602 1024">' +
    '' +
    '<path d="M1570.842283 616.786221C1472.540358 732.898345 1246.368119 1023.481256 792.640324 1023.481256 416.464708 1023.481256 178.101993 760.04593 25.331982 593.875042-7.95407 557.649443-7.089497 468.16616 34.496454 424.33232 168.33232 283.234043 409.461668 0.432286 792.640324 0.432286 1186.107396 0.432286 1471.935157 331.477204 1575.683891 441.883148 1606.030395 474.21817 1615.540696 563.960824 1570.842283 616.786221ZM802.842283 149.138804C601.56974 149.138804 438.424856 312.888889 438.424856 514.766633 438.424856 716.730834 601.56974 880.480919 802.842283 880.480919 1004.114826 880.480919 1167.25971 716.730834 1167.25971 514.766633 1167.25971 312.888889 1004.114826 149.138804 802.842283 149.138804ZM802.842283 733.503546C682.493752 733.503546 584.883485 635.54745 584.883485 514.766633 584.883485 393.985816 682.493752 296.116177 802.842283 296.116177 923.190814 296.116177 1020.801081 393.985816 1020.801081 514.766633 1020.801081 635.54745 923.190814 733.503546 802.842283 733.503546Z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '</svg>'
  var script = function() {
    var scripts = document.getElementsByTagName('script')
    return scripts[scripts.length - 1]
  }()
  var shouldInjectCss = script.getAttribute("data-injectcss")

  /**
   * document ready
   */
  var ready = function(fn) {
    if (document.addEventListener) {
      if (~["complete", "loaded", "interactive"].indexOf(document.readyState)) {
        setTimeout(fn, 0)
      } else {
        var loadFn = function() {
          document.removeEventListener("DOMContentLoaded", loadFn, false)
          fn()
        }
        document.addEventListener("DOMContentLoaded", loadFn, false)
      }
    } else if (document.attachEvent) {
      IEContentLoaded(window, fn)
    }

    function IEContentLoaded(w, fn) {
      var d = w.document,
        done = false,
        // only fire once
        init = function() {
          if (!done) {
            done = true
            fn()
          }
        }
        // polling for no errors
      var polling = function() {
        try {
          // throws errors until after ondocumentready
          d.documentElement.doScroll('left')
        } catch (e) {
          setTimeout(polling, 50)
          return
        }
        // no errors, fire

        init()
      };

      polling()
        // trying to always fire before onload
      d.onreadystatechange = function() {
        if (d.readyState == 'complete') {
          d.onreadystatechange = null
          init()
        }
      }
    }
  }

  /**
   * Insert el before target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var before = function(el, target) {
    target.parentNode.insertBefore(el, target)
  }

  /**
   * Prepend el to target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var prepend = function(el, target) {
    if (target.firstChild) {
      before(el, target.firstChild)
    } else {
      target.appendChild(el)
    }
  }

  function appendSvg() {
    var div, svg

    div = document.createElement('div')
    div.innerHTML = svgSprite
    svgSprite = null
    svg = div.getElementsByTagName('svg')[0]
    if (svg) {
      svg.setAttribute('aria-hidden', 'true')
      svg.style.position = 'absolute'
      svg.style.width = 0
      svg.style.height = 0
      svg.style.overflow = 'hidden'
      prepend(svg, document.body)
    }
  }

  if (shouldInjectCss && !window.__iconfont__svg__cssinject__) {
    window.__iconfont__svg__cssinject__ = true
    try {
      document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>");
    } catch (e) {
      console && console.log(e)
    }
  }

  ready(appendSvg)


})(window)